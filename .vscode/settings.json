{
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.rulers": [140],
  "editor.wrappingIndent": "indent",
  "files.encoding": "utf8",
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "html.format.preserveNewLines": true,
  "files.exclude": {
    "report": true,
    "vendor": true,
    "cache": true,
    "node_modules": true
  },
  "typescript.format.insertSpaceAfterCommaDelimiter": true,
  "typescript.format.insertSpaceAfterConstructor": false,
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
  "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
  "typescript.format.insertSpaceAfterTypeAssertion": false,
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,
  "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
  "typescript.preferences.quoteStyle": "double",
  "typescript.tsdk": "node_modules/typescript/lib", // Use this project's typescript version, not any other internal version
  "typescript.preferences.autoImportFileExcludePatterns": [
    // Don't suggest these paths in intellisense import
    "react-test-renderer"
  ],
  "vscode-color-picker.languages": ["javascript", "typescript", "javascriptreact", "typescriptreact"],
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[typescript]": {
    "editor.formatOnSave": true
  },
  "[typescriptreact]": {
    "editor.formatOnSave": true
  },
}
